@use "@angular/material" as mat;
@use "sass:map";
@use "./themes/classic.theme" as classic;
@use "./themes/shiny.theme" as shiny;
@use "./themes/christmas.theme" as christmas;

@mixin apply-theme($theme) {
  --a-team: #{map.get($theme, aTeam)};
  --b-team: #{map.get($theme, bTeam)};

  $menu: map.get($theme, menu);
  --menu-50: #{map.get($menu, 50)};
  --menu-100: #{map.get($menu, 100)};
  --menu-500: #{map.get($menu, 500)};

  --page: map.get($theme, page);
}

:root {
  @include mat.theme(
    (
      color: (
        primary: classic.$primary-palette,
        tertiary: classic.$tertiary-palette,
        theme-type: light,
      ),
    )
  );
}

:root[light-mode="dark"] {
  @include mat.theme(
    (
      color: (
        primary: classic.$primary-palette,
        tertiary: classic.$tertiary-palette,
        theme-type: dark,
      ),
    )
  );
}

:root[theme-name="shiny"] {
  @include mat.theme(
    (
      color: (
        primary: shiny.$primary-palette,
        tertiary: shiny.$tertiary-palette,
        theme-type: light,
      ),
    )
  );
}

:root[theme-name="shiny"][light-mode="dark"] {
  @include mat.theme(
    (
      color: (
        primary: shiny.$primary-palette,
        tertiary: shiny.$tertiary-palette,
        theme-type: dark,
      ),
    )
  );
}

:root[theme-name="christmas"] {
  @include mat.theme(
    (
      color: (
        primary: christmas.$primary-palette,
        tertiary: christmas.$tertiary-palette,
        theme-type: light,
      ),
    )
  );
}

:root[theme-name="christmas"][light-mode="dark"] {
  $christmas: mat.define-theme(
    (
      color: (
        primary: christmas.$primary-palette,
        tertiary: christmas.$tertiary-palette,
        theme-type: dark,
      ),
    )
  );

  @include mat.theme($christmas);
}
