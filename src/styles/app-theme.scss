@use "@angular/material" as mat;
@use "sass:map";
@use "./themes/classic.theme" as classic;
@use "./themes/shiny.theme" as shiny;
@use "./themes/christmas.theme" as christmas;

:root {
  @include mat.theme(
    (
      color: (
        primary: classic.$primary-palette,
        tertiary: classic.$tertiary-palette,
        theme-type: light,
      ),
    )
  );

  @each $key, $value in map.get(classic.$palettes, primary) {
    & {
      --primary-#{$key}: #{$value};
    }
    .primary-#{$key} {
      background-color: $value;
    }
  }
  @each $key, $value in map.get(classic.$palettes, secondary) {
    & {
      --secondary-#{$key}: #{$value};
    }
    .secondary-#{$key} {
      background-color: $value;
    }
  }
  @each $key, $value in map.get(classic.$palettes, primary-alt) {
    & {
      --tertiary-#{$key}: #{$value};
    }
    .tertiary-#{$key} {
      background-color: $value;
    }
  }
  .alternate {
    @include mat.theme(
      (
        color: (
          primary: classic.$primary-palette-alt,
          tertiary: classic.$tertiary-palette-alt,
          theme-type: light,
        ),
      )
    );
    @each $key, $value in map.get(classic.$palettes, primary) {
      .primary-#{$key} {
        background-color: $value;
      }
    }
    @each $key, $value in map.get(classic.$palettes, secondary) {
      .secondary-#{$key} {
        background-color: $value;
      }
    }
    @each $key, $value in map.get(classic.$palettes, primary-alt) {
      .tertiary-#{$key} {
        background-color: $value;
      }
    }
  }
}

:root[light-mode="dark"] {
  @include mat.theme(
    (
      color: (
        primary: classic.$primary-palette,
        tertiary: classic.$tertiary-palette,
        theme-type: dark,
      ),
    )
  );

  .alternate {
    @include mat.theme(
      (
        color: (
          primary: classic.$primary-palette_alt,
          tertiary: classic.$tertiary-palette_alt,
          theme-type: dark,
        ),
      )
    );
  }
}

:root[theme-name="shiny"] {
  @include mat.theme(
    (
      color: (
        primary: shiny.$primary-palette,
        tertiary: shiny.$tertiary-palette,
        theme-type: light,
      ),
    )
  );

  @each $key, $value in map.get(shiny.$palettes, primary) {
    .primary-#{$key} {
      background-color: $value;
    }
  }
  @each $key, $value in map.get(shiny.$palettes, secondary) {
    .secondary-#{$key} {
      background-color: $value;
    }
  }
  @each $key, $value in map.get(shiny.$palettes, primary-alt) {
    .tertiary-#{$key} {
      background-color: $value;
    }
  }
  .alternate {
    @include mat.theme(
      (
        color: (
          primary: shiny.$primary-palette-alt,
          tertiary: shiny.$tertiary-palette-alt,
          theme-type: light,
        ),
      )
    );
    @each $key, $value in map.get(shiny.$palettes, primary-alt) {
      .primary-#{$key} {
        background-color: $value;
      }
    }
    @each $key, $value in map.get(shiny.$palettes, secondary-alt) {
      .secondary-#{$key} {
        background-color: $value;
      }
    }
    @each $key, $value in map.get(shiny.$palettes, primary) {
      .tertiary-#{$key} {
        background-color: $value;
      }
    }
  }
}

:root[theme-name="shiny"][light-mode="dark"] {
  @include mat.theme(
    (
      color: (
        primary: shiny.$primary-palette,
        tertiary: shiny.$tertiary-palette,
        theme-type: dark,
      ),
    )
  );

  .alternate {
    @include mat.theme(
      (
        color: (
          primary: shiny.$primary-palette_alt,
          tertiary: shiny.$tertiary-palette_alt,
          theme-type: dark,
        ),
      )
    );
  }
}

:root[theme-name="christmas"] {
  @include mat.theme(
    (
      color: (
        primary: christmas.$primary-palette,
        tertiary: christmas.$tertiary-palette,
        theme-type: light,
      ),
    )
  );

  .alternate {
    @include mat.theme(
      (
        color: (
          primary: christmas.$primary-palette_alt,
          tertiary: christmas.$tertiary-palette_alt,
          theme-type: light,
        ),
      )
    );
  }
}

:root[theme-name="christmas"][light-mode="dark"] {
  @include mat.theme(
    (
      color: (
        primary: christmas.$primary-palette,
        tertiary: christmas.$tertiary-palette,
        theme-type: dark,
      ),
    )
  );

  .alternate {
    @include mat.theme(
      (
        color: (
          primary: christmas.$primary-palette_alt,
          tertiary: christmas.$tertiary-palette_alt,
          theme-type: dark,
        ),
      )
    );
  }
}

// @include mat.autocomplete-overrides(
//     (
//       background-color: var(--mat-sys-primary-container),
//     )
//   );

//   @include mat.form-field-overrides(
//     (
//       filled-container-color: var(--mat-sys-primary-container),
//     )
//   );

@include mat.tooltip-overrides(
  (
    container-color: var(--mat-sys-secondary),
    supporting-text-color: var(--mat-sys-on-secondary),
    supporting-text-size: small,
  )
);
